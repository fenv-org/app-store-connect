/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 3.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Decimal } from '../models/Decimal.ts';
import { GameCenterLeaderboardFormatter } from '../models/GameCenterLeaderboardFormatter.ts';
import { HttpFile } from '../http/http.ts';

export class GameCenterLeaderboardAttributes {
    'defaultFormatter'?: GameCenterLeaderboardFormatter;
    'referenceName'?: string;
    'vendorIdentifier'?: string;
    'submissionType'?: GameCenterLeaderboardAttributesSubmissionTypeEnum;
    'scoreSortType'?: GameCenterLeaderboardAttributesScoreSortTypeEnum;
    'scoreRangeStart'?: Decimal;
    'scoreRangeEnd'?: Decimal;
    'recurrenceStartDate'?: Date;
    'recurrenceDuration'?: string;
    'recurrenceRule'?: string;
    'archived'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "defaultFormatter",
            "baseName": "defaultFormatter",
            "type": "GameCenterLeaderboardFormatter",
            "format": ""
        },
        {
            "name": "referenceName",
            "baseName": "referenceName",
            "type": "string",
            "format": ""
        },
        {
            "name": "vendorIdentifier",
            "baseName": "vendorIdentifier",
            "type": "string",
            "format": ""
        },
        {
            "name": "submissionType",
            "baseName": "submissionType",
            "type": "GameCenterLeaderboardAttributesSubmissionTypeEnum",
            "format": ""
        },
        {
            "name": "scoreSortType",
            "baseName": "scoreSortType",
            "type": "GameCenterLeaderboardAttributesScoreSortTypeEnum",
            "format": ""
        },
        {
            "name": "scoreRangeStart",
            "baseName": "scoreRangeStart",
            "type": "Decimal",
            "format": "number"
        },
        {
            "name": "scoreRangeEnd",
            "baseName": "scoreRangeEnd",
            "type": "Decimal",
            "format": "number"
        },
        {
            "name": "recurrenceStartDate",
            "baseName": "recurrenceStartDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "recurrenceDuration",
            "baseName": "recurrenceDuration",
            "type": "string",
            "format": "duration"
        },
        {
            "name": "recurrenceRule",
            "baseName": "recurrenceRule",
            "type": "string",
            "format": ""
        },
        {
            "name": "archived",
            "baseName": "archived",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return GameCenterLeaderboardAttributes.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum GameCenterLeaderboardAttributesSubmissionTypeEnum {
    BestScore = 'BEST_SCORE',
    MostRecentScore = 'MOST_RECENT_SCORE'
}
export enum GameCenterLeaderboardAttributesScoreSortTypeEnum {
    Asc = 'ASC',
    Desc = 'DESC'
}

