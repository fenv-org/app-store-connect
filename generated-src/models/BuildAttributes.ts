/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 3.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { BuildAudienceType } from '../models/BuildAudienceType.ts';
import { ImageAsset } from '../models/ImageAsset.ts';
import { HttpFile } from '../http/http.ts';

export class BuildAttributes {
    'version'?: string;
    'uploadedDate'?: Date;
    'expirationDate'?: Date;
    'expired'?: boolean;
    'minOsVersion'?: string;
    'lsMinimumSystemVersion'?: string;
    'computedMinMacOsVersion'?: string;
    'iconAssetToken'?: ImageAsset;
    'processingState'?: BuildAttributesProcessingStateEnum;
    'buildAudienceType'?: BuildAudienceType;
    'usesNonExemptEncryption'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "version",
            "baseName": "version",
            "type": "string",
            "format": ""
        },
        {
            "name": "uploadedDate",
            "baseName": "uploadedDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "expirationDate",
            "baseName": "expirationDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "expired",
            "baseName": "expired",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "minOsVersion",
            "baseName": "minOsVersion",
            "type": "string",
            "format": ""
        },
        {
            "name": "lsMinimumSystemVersion",
            "baseName": "lsMinimumSystemVersion",
            "type": "string",
            "format": ""
        },
        {
            "name": "computedMinMacOsVersion",
            "baseName": "computedMinMacOsVersion",
            "type": "string",
            "format": ""
        },
        {
            "name": "iconAssetToken",
            "baseName": "iconAssetToken",
            "type": "ImageAsset",
            "format": ""
        },
        {
            "name": "processingState",
            "baseName": "processingState",
            "type": "BuildAttributesProcessingStateEnum",
            "format": ""
        },
        {
            "name": "buildAudienceType",
            "baseName": "buildAudienceType",
            "type": "BuildAudienceType",
            "format": ""
        },
        {
            "name": "usesNonExemptEncryption",
            "baseName": "usesNonExemptEncryption",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return BuildAttributes.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum BuildAttributesProcessingStateEnum {
    Processing = 'PROCESSING',
    Failed = 'FAILED',
    Invalid = 'INVALID',
    Valid = 'VALID'
}

