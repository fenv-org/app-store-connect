/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 3.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AppClip } from '../models/AppClip.ts';
import { AppCustomProductPage } from '../models/AppCustomProductPage.ts';
import { AppEncryptionDeclaration } from '../models/AppEncryptionDeclaration.ts';
import { AppEvent } from '../models/AppEvent.ts';
import { AppInfo } from '../models/AppInfo.ts';
import { AppPreOrder } from '../models/AppPreOrder.ts';
import { AppPrice } from '../models/AppPrice.ts';
import { AppStoreVersion } from '../models/AppStoreVersion.ts';
import { AppStoreVersionExperimentV2 } from '../models/AppStoreVersionExperimentV2.ts';
import { AppStoreVersionExperimentV2Attributes } from '../models/AppStoreVersionExperimentV2Attributes.ts';
import { AppStoreVersionExperimentV2Relationships } from '../models/AppStoreVersionExperimentV2Relationships.ts';
import { BetaAppLocalization } from '../models/BetaAppLocalization.ts';
import { BetaAppReviewDetail } from '../models/BetaAppReviewDetail.ts';
import { BetaGroup } from '../models/BetaGroup.ts';
import { BetaLicenseAgreement } from '../models/BetaLicenseAgreement.ts';
import { Build } from '../models/Build.ts';
import { CiProduct } from '../models/CiProduct.ts';
import { EndUserLicenseAgreement } from '../models/EndUserLicenseAgreement.ts';
import { GameCenterDetail } from '../models/GameCenterDetail.ts';
import { GameCenterEnabledVersion } from '../models/GameCenterEnabledVersion.ts';
import { InAppPurchase } from '../models/InAppPurchase.ts';
import { InAppPurchaseV2 } from '../models/InAppPurchaseV2.ts';
import { PrereleaseVersion } from '../models/PrereleaseVersion.ts';
import { PromotedPurchase } from '../models/PromotedPurchase.ts';
import { ResourceLinks } from '../models/ResourceLinks.ts';
import { ReviewSubmission } from '../models/ReviewSubmission.ts';
import { SubscriptionGracePeriod } from '../models/SubscriptionGracePeriod.ts';
import { SubscriptionGroup } from '../models/SubscriptionGroup.ts';
import { Territory } from '../models/Territory.ts';
import { HttpFile } from '../http/http.ts';

export class AppsResponseIncludedInner {
    'type': AppsResponseIncludedInnerTypeEnum;
    'id': string;
    'attributes'?: AppStoreVersionExperimentV2Attributes;
    'relationships'?: AppStoreVersionExperimentV2Relationships;
    'links'?: ResourceLinks;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "type",
            "baseName": "type",
            "type": "AppsResponseIncludedInnerTypeEnum",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "attributes",
            "baseName": "attributes",
            "type": "AppStoreVersionExperimentV2Attributes",
            "format": ""
        },
        {
            "name": "relationships",
            "baseName": "relationships",
            "type": "AppStoreVersionExperimentV2Relationships",
            "format": ""
        },
        {
            "name": "links",
            "baseName": "links",
            "type": "ResourceLinks",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return AppsResponseIncludedInner.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum AppsResponseIncludedInnerTypeEnum {
    AppEncryptionDeclarations = 'appEncryptionDeclarations',
    CiProducts = 'ciProducts',
    BetaGroups = 'betaGroups',
    AppStoreVersions = 'appStoreVersions',
    PreReleaseVersions = 'preReleaseVersions',
    BetaAppLocalizations = 'betaAppLocalizations',
    Builds = 'builds',
    BetaLicenseAgreements = 'betaLicenseAgreements',
    BetaAppReviewDetails = 'betaAppReviewDetails',
    AppInfos = 'appInfos',
    AppClips = 'appClips',
    EndUserLicenseAgreements = 'endUserLicenseAgreements',
    AppPreOrders = 'appPreOrders',
    AppPrices = 'appPrices',
    Territories = 'territories',
    InAppPurchases = 'inAppPurchases',
    SubscriptionGroups = 'subscriptionGroups',
    GameCenterEnabledVersions = 'gameCenterEnabledVersions',
    AppCustomProductPages = 'appCustomProductPages',
    PromotedPurchases = 'promotedPurchases',
    AppEvents = 'appEvents',
    ReviewSubmissions = 'reviewSubmissions',
    SubscriptionGracePeriods = 'subscriptionGracePeriods',
    GameCenterDetails = 'gameCenterDetails',
    AppStoreVersionExperiments = 'appStoreVersionExperiments'
}

