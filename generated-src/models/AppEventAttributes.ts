/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 3.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AppEventAttributesTerritorySchedulesInner } from '../models/AppEventAttributesTerritorySchedulesInner.ts';
import { HttpFile } from '../http/http.ts';

export class AppEventAttributes {
    'referenceName'?: string;
    'badge'?: AppEventAttributesBadgeEnum;
    'eventState'?: AppEventAttributesEventStateEnum;
    'deepLink'?: string;
    'purchaseRequirement'?: AppEventAttributesPurchaseRequirementEnum;
    'primaryLocale'?: string;
    'priority'?: AppEventAttributesPriorityEnum;
    'purpose'?: AppEventAttributesPurposeEnum;
    'territorySchedules'?: Array<AppEventAttributesTerritorySchedulesInner>;
    'archivedTerritorySchedules'?: Array<AppEventAttributesTerritorySchedulesInner>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "referenceName",
            "baseName": "referenceName",
            "type": "string",
            "format": ""
        },
        {
            "name": "badge",
            "baseName": "badge",
            "type": "AppEventAttributesBadgeEnum",
            "format": ""
        },
        {
            "name": "eventState",
            "baseName": "eventState",
            "type": "AppEventAttributesEventStateEnum",
            "format": ""
        },
        {
            "name": "deepLink",
            "baseName": "deepLink",
            "type": "string",
            "format": "uri"
        },
        {
            "name": "purchaseRequirement",
            "baseName": "purchaseRequirement",
            "type": "AppEventAttributesPurchaseRequirementEnum",
            "format": ""
        },
        {
            "name": "primaryLocale",
            "baseName": "primaryLocale",
            "type": "string",
            "format": ""
        },
        {
            "name": "priority",
            "baseName": "priority",
            "type": "AppEventAttributesPriorityEnum",
            "format": ""
        },
        {
            "name": "purpose",
            "baseName": "purpose",
            "type": "AppEventAttributesPurposeEnum",
            "format": ""
        },
        {
            "name": "territorySchedules",
            "baseName": "territorySchedules",
            "type": "Array<AppEventAttributesTerritorySchedulesInner>",
            "format": ""
        },
        {
            "name": "archivedTerritorySchedules",
            "baseName": "archivedTerritorySchedules",
            "type": "Array<AppEventAttributesTerritorySchedulesInner>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return AppEventAttributes.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum AppEventAttributesBadgeEnum {
    LiveEvent = 'LIVE_EVENT',
    Premiere = 'PREMIERE',
    Challenge = 'CHALLENGE',
    Competition = 'COMPETITION',
    NewSeason = 'NEW_SEASON',
    MajorUpdate = 'MAJOR_UPDATE',
    SpecialEvent = 'SPECIAL_EVENT'
}
export enum AppEventAttributesEventStateEnum {
    Draft = 'DRAFT',
    ReadyForReview = 'READY_FOR_REVIEW',
    WaitingForReview = 'WAITING_FOR_REVIEW',
    InReview = 'IN_REVIEW',
    Rejected = 'REJECTED',
    Accepted = 'ACCEPTED',
    Approved = 'APPROVED',
    Published = 'PUBLISHED',
    Past = 'PAST',
    Archived = 'ARCHIVED'
}
export enum AppEventAttributesPurchaseRequirementEnum {
    NoCostAssociated = 'NO_COST_ASSOCIATED',
    InAppPurchase = 'IN_APP_PURCHASE',
    Subscription = 'SUBSCRIPTION',
    InAppPurchaseAndSubscription = 'IN_APP_PURCHASE_AND_SUBSCRIPTION',
    InAppPurchaseOrSubscription = 'IN_APP_PURCHASE_OR_SUBSCRIPTION'
}
export enum AppEventAttributesPriorityEnum {
    High = 'HIGH',
    Normal = 'NORMAL'
}
export enum AppEventAttributesPurposeEnum {
    AppropriateForAllUsers = 'APPROPRIATE_FOR_ALL_USERS',
    AttractNewUsers = 'ATTRACT_NEW_USERS',
    KeepActiveUsersInformed = 'KEEP_ACTIVE_USERS_INFORMED',
    BringBackLapsedUsers = 'BRING_BACK_LAPSED_USERS'
}

