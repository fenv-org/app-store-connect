/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 3.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CiBuildRunAttributesSourceCommit } from '../models/CiBuildRunAttributesSourceCommit.ts';
import { CiCompletionStatus } from '../models/CiCompletionStatus.ts';
import { CiExecutionProgress } from '../models/CiExecutionProgress.ts';
import { CiIssueCounts } from '../models/CiIssueCounts.ts';
import { HttpFile } from '../http/http.ts';

export class CiBuildRunAttributes {
    'number'?: number;
    'createdDate'?: Date;
    'startedDate'?: Date;
    'finishedDate'?: Date;
    'sourceCommit'?: CiBuildRunAttributesSourceCommit;
    'destinationCommit'?: CiBuildRunAttributesSourceCommit;
    'isPullRequestBuild'?: boolean;
    'issueCounts'?: CiIssueCounts;
    'executionProgress'?: CiExecutionProgress;
    'completionStatus'?: CiCompletionStatus;
    'startReason'?: CiBuildRunAttributesStartReasonEnum;
    'cancelReason'?: CiBuildRunAttributesCancelReasonEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "number",
            "baseName": "number",
            "type": "number",
            "format": ""
        },
        {
            "name": "createdDate",
            "baseName": "createdDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "startedDate",
            "baseName": "startedDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "finishedDate",
            "baseName": "finishedDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "sourceCommit",
            "baseName": "sourceCommit",
            "type": "CiBuildRunAttributesSourceCommit",
            "format": ""
        },
        {
            "name": "destinationCommit",
            "baseName": "destinationCommit",
            "type": "CiBuildRunAttributesSourceCommit",
            "format": ""
        },
        {
            "name": "isPullRequestBuild",
            "baseName": "isPullRequestBuild",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "issueCounts",
            "baseName": "issueCounts",
            "type": "CiIssueCounts",
            "format": ""
        },
        {
            "name": "executionProgress",
            "baseName": "executionProgress",
            "type": "CiExecutionProgress",
            "format": ""
        },
        {
            "name": "completionStatus",
            "baseName": "completionStatus",
            "type": "CiCompletionStatus",
            "format": ""
        },
        {
            "name": "startReason",
            "baseName": "startReason",
            "type": "CiBuildRunAttributesStartReasonEnum",
            "format": ""
        },
        {
            "name": "cancelReason",
            "baseName": "cancelReason",
            "type": "CiBuildRunAttributesCancelReasonEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CiBuildRunAttributes.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum CiBuildRunAttributesStartReasonEnum {
    GitRefChange = 'GIT_REF_CHANGE',
    Manual = 'MANUAL',
    ManualRebuild = 'MANUAL_REBUILD',
    PullRequestOpen = 'PULL_REQUEST_OPEN',
    PullRequestUpdate = 'PULL_REQUEST_UPDATE',
    Schedule = 'SCHEDULE'
}
export enum CiBuildRunAttributesCancelReasonEnum {
    AutomaticallyByNewerBuild = 'AUTOMATICALLY_BY_NEWER_BUILD',
    ManuallyByUser = 'MANUALLY_BY_USER'
}

